1) deletion of last node in doubly linkedlist

ANS=


PROGRAM:


#include <iostream>
using namespace std;
struct Node {
    int data;
    Node* next;
    Node* prev;
};
class linkedList {
  private:
    Node* head;
  public:
  linkedList() {
      head = NULL;
  }
  void push_back(int newElement) {
      Node* newNode = new Node();
      newNode->data = newElement;
      newNode->next = NULL;
      newNode->prev = NULL;
      if(head == NULL) {
          head = newNode;
      }
      else{
          Node* temp = head;
          while(temp->next != NULL)
          temp = temp->next;
          temp->next = newNode;
          newNode->prev = temp;
      }
  }
  void pop_back() {
      if(head != NULL){
          if (head->next == NULL) {
              head = NULL;
          }
          else{
              Node* temp = head;
              while(temp->next->next != NULL)
              temp = temp->next;
              Node* lastNode = temp->next;
              temp->next = NULL;
              free(lastNode);
          }
      }
  }
    
    void PrintList() {
        Node* temp = head;
        if(temp != NULL) {
            cout<<"The list contains: ";
            while(temp != NULL) {
                cout<<temp->data<<" ";
                temp = temp->next;
            }
            cout<<endl;
        }
        else {
            cout<<"The list is empty.\n";
        }
    }
};
int main() {
    linkedList MyList;
    MyList.push_back(1);
    MyList.push_back(2);
    MyList.push_back(3);
    MyList.push_back(4);
    MyList.PrintList();
    
MyList.pop_back();
MyList.PrintList();

    return 0;
}



OUTPUT:

The list contains: 1 2 3 4 
The list contains: 1 2 3 